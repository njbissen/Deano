//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Users_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.User), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Forums_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.User), "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Forum), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Threads_Forums", "Forum", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.Forum), "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Thread), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_PostPictures_Pictures", "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.Picture), "PostPicture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.PostPicture), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_ReportPictures_Pictures", "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.Picture), "ReportPicture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.ReportPicture), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_PostPictures_Posts", "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.Post), "PostPicture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.PostPicture), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Posts_Threads", "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.Thread), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Post), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Posts_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.User), "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Post), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_ReportPictures_Reports", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.Report), "ReportPicture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.ReportPicture), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Reports_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.User), "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Report), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Threads_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.User), "Thread", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Thread), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Bookmarks_Posts", "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Deano.Data.Post), "Bookmark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Bookmark), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Bookmarks_Reports", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Deano.Data.Report), "Bookmark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Bookmark), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_Bookmarks_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.User), "Bookmark", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.Bookmark), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_ArticleTags_Posts", "Post", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Deano.Data.Post), "ArticleTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.ArticleTag), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_ArticleTags_Reports", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Deano.Data.Report), "ArticleTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.ArticleTag), true)]
[assembly: EdmRelationshipAttribute("Deano.Models", "FK_ArticleTags_Tags", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Deano.Data.Tag), "ArticleTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Deano.Data.ArticleTag), true)]

#endregion

namespace Deano.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Database : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Database object using the connection string found in the 'Database' section of the application configuration file.
        /// </summary>
        public Database() : base("name=Database", "Database")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Database object.
        /// </summary>
        public Database(string connectionString) : base(connectionString, "Database")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Database object.
        /// </summary>
        public Database(EntityConnection connection) : base(connection, "Database")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Forum> Forums
        {
            get
            {
                if ((_Forums == null))
                {
                    _Forums = base.CreateObjectSet<Forum>("Forums");
                }
                return _Forums;
            }
        }
        private ObjectSet<Forum> _Forums;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Picture> Pictures
        {
            get
            {
                if ((_Pictures == null))
                {
                    _Pictures = base.CreateObjectSet<Picture>("Pictures");
                }
                return _Pictures;
            }
        }
        private ObjectSet<Picture> _Pictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PostPicture> PostPictures
        {
            get
            {
                if ((_PostPictures == null))
                {
                    _PostPictures = base.CreateObjectSet<PostPicture>("PostPictures");
                }
                return _PostPictures;
            }
        }
        private ObjectSet<PostPicture> _PostPictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Post> Posts
        {
            get
            {
                if ((_Posts == null))
                {
                    _Posts = base.CreateObjectSet<Post>("Posts");
                }
                return _Posts;
            }
        }
        private ObjectSet<Post> _Posts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportPicture> ReportPictures
        {
            get
            {
                if ((_ReportPictures == null))
                {
                    _ReportPictures = base.CreateObjectSet<ReportPicture>("ReportPictures");
                }
                return _ReportPictures;
            }
        }
        private ObjectSet<ReportPicture> _ReportPictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Report> _Reports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Thread> Threads
        {
            get
            {
                if ((_Threads == null))
                {
                    _Threads = base.CreateObjectSet<Thread>("Threads");
                }
                return _Threads;
            }
        }
        private ObjectSet<Thread> _Threads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bookmark> Bookmarks
        {
            get
            {
                if ((_Bookmarks == null))
                {
                    _Bookmarks = base.CreateObjectSet<Bookmark>("Bookmarks");
                }
                return _Bookmarks;
            }
        }
        private ObjectSet<Bookmark> _Bookmarks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MetaTag> MetaTags
        {
            get
            {
                if ((_MetaTags == null))
                {
                    _MetaTags = base.CreateObjectSet<MetaTag>("MetaTags");
                }
                return _MetaTags;
            }
        }
        private ObjectSet<MetaTag> _MetaTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ArticleTag> ArticleTags
        {
            get
            {
                if ((_ArticleTags == null))
                {
                    _ArticleTags = base.CreateObjectSet<ArticleTag>("ArticleTags");
                }
                return _ArticleTags;
            }
        }
        private ObjectSet<ArticleTag> _ArticleTags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Forums EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForums(Forum forum)
        {
            base.AddObject("Forums", forum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPictures(Picture picture)
        {
            base.AddObject("Pictures", picture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PostPictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPostPictures(PostPicture postPicture)
        {
            base.AddObject("PostPictures", postPicture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Posts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPosts(Post post)
        {
            base.AddObject("Posts", post);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportPictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportPictures(ReportPicture reportPicture)
        {
            base.AddObject("ReportPictures", reportPicture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReports(Report report)
        {
            base.AddObject("Reports", report);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Threads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThreads(Thread thread)
        {
            base.AddObject("Threads", thread);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bookmarks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBookmarks(Bookmark bookmark)
        {
            base.AddObject("Bookmarks", bookmark);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MetaTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMetaTags(MetaTag metaTag)
        {
            base.AddObject("MetaTags", metaTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArticleTags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArticleTags(ArticleTag articleTag)
        {
            base.AddObject("ArticleTags", articleTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="ArticleTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArticleTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ArticleTag object.
        /// </summary>
        /// <param name="articleTagId">Initial value of the ArticleTagId property.</param>
        /// <param name="tagId">Initial value of the TagId property.</param>
        public static ArticleTag CreateArticleTag(global::System.Int32 articleTagId, global::System.Int32 tagId)
        {
            ArticleTag articleTag = new ArticleTag();
            articleTag.ArticleTagId = articleTagId;
            articleTag.TagId = tagId;
            return articleTag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleTagId
        {
            get
            {
                return _ArticleTagId;
            }
            set
            {
                if (_ArticleTagId != value)
                {
                    OnArticleTagIdChanging(value);
                    ReportPropertyChanging("ArticleTagId");
                    _ArticleTagId = StructuralObject.SetValidValue(value, "ArticleTagId");
                    ReportPropertyChanged("ArticleTagId");
                    OnArticleTagIdChanged();
                }
            }
        }
        private global::System.Int32 _ArticleTagId;
        partial void OnArticleTagIdChanging(global::System.Int32 value);
        partial void OnArticleTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value, "PostId");
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PostId;
        partial void OnPostIdChanging(Nullable<global::System.Int32> value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReportId;
        partial void OnReportIdChanging(Nullable<global::System.Int32> value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                OnTagIdChanging(value);
                ReportPropertyChanging("TagId");
                _TagId = StructuralObject.SetValidValue(value, "TagId");
                ReportPropertyChanged("TagId");
                OnTagIdChanged();
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ArticleTags_Posts", "Post")]
        public Post Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_ArticleTags_Posts", "Post").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_ArticleTags_Posts", "Post").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Post> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_ArticleTags_Posts", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Post>("Deano.Models.FK_ArticleTags_Posts", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ArticleTags_Reports", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_ArticleTags_Reports", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_ArticleTags_Reports", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_ArticleTags_Reports", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("Deano.Models.FK_ArticleTags_Reports", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ArticleTags_Tags", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("Deano.Models.FK_ArticleTags_Tags", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("Deano.Models.FK_ArticleTags_Tags", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("Deano.Models.FK_ArticleTags_Tags", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("Deano.Models.FK_ArticleTags_Tags", "Tag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Bookmark")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bookmark : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bookmark object.
        /// </summary>
        /// <param name="bookmarkId">Initial value of the BookmarkId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Bookmark CreateBookmark(global::System.Int32 bookmarkId, global::System.Int32 userId)
        {
            Bookmark bookmark = new Bookmark();
            bookmark.BookmarkId = bookmarkId;
            bookmark.UserId = userId;
            return bookmark;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BookmarkId
        {
            get
            {
                return _BookmarkId;
            }
            set
            {
                if (_BookmarkId != value)
                {
                    OnBookmarkIdChanging(value);
                    ReportPropertyChanging("BookmarkId");
                    _BookmarkId = StructuralObject.SetValidValue(value, "BookmarkId");
                    ReportPropertyChanged("BookmarkId");
                    OnBookmarkIdChanged();
                }
            }
        }
        private global::System.Int32 _BookmarkId;
        partial void OnBookmarkIdChanging(global::System.Int32 value);
        partial void OnBookmarkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value, "PostId");
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PostId;
        partial void OnPostIdChanging(Nullable<global::System.Int32> value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ReportId;
        partial void OnReportIdChanging(Nullable<global::System.Int32> value);
        partial void OnReportIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Bookmarks_Posts", "Post")]
        public Post Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_Bookmarks_Posts", "Post").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_Bookmarks_Posts", "Post").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Post> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_Bookmarks_Posts", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Post>("Deano.Models.FK_Bookmarks_Posts", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Bookmarks_Reports", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_Bookmarks_Reports", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_Bookmarks_Reports", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_Bookmarks_Reports", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("Deano.Models.FK_Bookmarks_Reports", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Bookmarks_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Bookmarks_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Bookmarks_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Bookmarks_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Deano.Models.FK_Bookmarks_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Forum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Forum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Forum object.
        /// </summary>
        /// <param name="forumId">Initial value of the ForumId property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Forum CreateForum(global::System.Int32 forumId, global::System.String subject, global::System.Int32 createdBy, global::System.DateTime createdDate)
        {
            Forum forum = new Forum();
            forum.ForumId = forumId;
            forum.Subject = subject;
            forum.CreatedBy = createdBy;
            forum.CreatedDate = createdDate;
            return forum;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumId
        {
            get
            {
                return _ForumId;
            }
            set
            {
                if (_ForumId != value)
                {
                    OnForumIdChanging(value);
                    ReportPropertyChanging("ForumId");
                    _ForumId = StructuralObject.SetValidValue(value, "ForumId");
                    ReportPropertyChanged("ForumId");
                    OnForumIdChanged();
                }
            }
        }
        private global::System.Int32 _ForumId;
        partial void OnForumIdChanging(global::System.Int32 value);
        partial void OnForumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true, "Tags");
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Forums_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Forums_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Forums_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Forums_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Deano.Models.FK_Forums_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Threads_Forums", "Thread")]
        public EntityCollection<Thread> Threads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Thread>("Deano.Models.FK_Threads_Forums", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Thread>("Deano.Models.FK_Threads_Forums", "Thread", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="messageDate">Initial value of the MessageDate property.</param>
        /// <param name="fromEmail">Initial value of the FromEmail property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="numberOfDays">Initial value of the NumberOfDays property.</param>
        public static Message CreateMessage(global::System.Int32 messageId, global::System.DateTime messageDate, global::System.String fromEmail, global::System.String subject, global::System.String body, global::System.String numberOfDays)
        {
            Message message = new Message();
            message.MessageId = messageId;
            message.MessageDate = messageDate;
            message.FromEmail = fromEmail;
            message.Subject = subject;
            message.Body = body;
            message.NumberOfDays = numberOfDays;
            return message;
        }

		#endregion

		#region Simple Properties

		public string CaptchaCode { get; set; }

		/// <summary>
		/// No Metadata Documentation available.
		/// </summary>
		[EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value, "MessageId");
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageDate
        {
            get
            {
                return _MessageDate;
            }
            set
            {
                OnMessageDateChanging(value);
                ReportPropertyChanging("MessageDate");
                _MessageDate = StructuralObject.SetValidValue(value, "MessageDate");
                ReportPropertyChanged("MessageDate");
                OnMessageDateChanged();
            }
        }
        private global::System.DateTime _MessageDate;
        partial void OnMessageDateChanging(global::System.DateTime value);
        partial void OnMessageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FromEmail
        {
            get
            {
                return _FromEmail;
            }
            set
            {
                OnFromEmailChanging(value);
                ReportPropertyChanging("FromEmail");
                _FromEmail = StructuralObject.SetValidValue(value, false, "FromEmail");
                ReportPropertyChanged("FromEmail");
                OnFromEmailChanged();
            }
        }
        private global::System.String _FromEmail;
        partial void OnFromEmailChanging(global::System.String value);
        partial void OnFromEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FromName
        {
            get
            {
                return _FromName;
            }
            set
            {
                OnFromNameChanging(value);
                ReportPropertyChanging("FromName");
                _FromName = StructuralObject.SetValidValue(value, true, "FromName");
                ReportPropertyChanged("FromName");
                OnFromNameChanged();
            }
        }
        private global::System.String _FromName;
        partial void OnFromNameChanging(global::System.String value);
        partial void OnFromNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value, "RequestDate");
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestDate;
        partial void OnRequestDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfPeople
        {
            get
            {
                return _NumberOfPeople;
            }
            set
            {
                OnNumberOfPeopleChanging(value);
                ReportPropertyChanging("NumberOfPeople");
                _NumberOfPeople = StructuralObject.SetValidValue(value, "NumberOfPeople");
                ReportPropertyChanged("NumberOfPeople");
                OnNumberOfPeopleChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfPeople;
        partial void OnNumberOfPeopleChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfPeopleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NumberOfDays
        {
            get
            {
                return _NumberOfDays;
            }
            set
            {
                OnNumberOfDaysChanging(value);
                ReportPropertyChanging("NumberOfDays");
                _NumberOfDays = StructuralObject.SetValidValue(value, false, "NumberOfDays");
                ReportPropertyChanged("NumberOfDays");
                OnNumberOfDaysChanged();
            }
        }
        private global::System.String _NumberOfDays;
        partial void OnNumberOfDaysChanging(global::System.String value);
        partial void OnNumberOfDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Catch
        {
            get
            {
                return _Catch;
            }
            set
            {
                OnCatchChanging(value);
                ReportPropertyChanging("Catch");
                _Catch = StructuralObject.SetValidValue(value, true, "Catch");
                ReportPropertyChanged("Catch");
                OnCatchChanged();
            }
        }
        private global::System.String _Catch;
        partial void OnCatchChanging(global::System.String value);
        partial void OnCatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FromPhone
        {
            get
            {
                return _FromPhone;
            }
            set
            {
                OnFromPhoneChanging(value);
                ReportPropertyChanging("FromPhone");
                _FromPhone = StructuralObject.SetValidValue(value, true, "FromPhone");
                ReportPropertyChanged("FromPhone");
                OnFromPhoneChanged();
            }
        }
        private global::System.String _FromPhone;
        partial void OnFromPhoneChanging(global::System.String value);
        partial void OnFromPhoneChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="MetaTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MetaTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MetaTag object.
        /// </summary>
        /// <param name="metaTagId">Initial value of the MetaTagId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        public static MetaTag CreateMetaTag(global::System.Int32 metaTagId, global::System.String name, global::System.String value, global::System.Int32 typeId)
        {
            MetaTag metaTag = new MetaTag();
            metaTag.MetaTagId = metaTagId;
            metaTag.Name = name;
            metaTag.Value = value;
            metaTag.TypeId = typeId;
            return metaTag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MetaTagId
        {
            get
            {
                return _MetaTagId;
            }
            set
            {
                if (_MetaTagId != value)
                {
                    OnMetaTagIdChanging(value);
                    ReportPropertyChanging("MetaTagId");
                    _MetaTagId = StructuralObject.SetValidValue(value, "MetaTagId");
                    ReportPropertyChanged("MetaTagId");
                    OnMetaTagIdChanged();
                }
            }
        }
        private global::System.Int32 _MetaTagId;
        partial void OnMetaTagIdChanging(global::System.Int32 value);
        partial void OnMetaTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value, "TypeId");
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Picture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Picture object.
        /// </summary>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        /// <param name="path">Initial value of the Path property.</param>
        public static Picture CreatePicture(global::System.Int32 pictureId, global::System.String path)
        {
            Picture picture = new Picture();
            picture.PictureId = pictureId;
            picture.Path = path;
            return picture;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                if (_PictureId != value)
                {
                    OnPictureIdChanging(value);
                    ReportPropertyChanging("PictureId");
                    _PictureId = StructuralObject.SetValidValue(value, "PictureId");
                    ReportPropertyChanged("PictureId");
                    OnPictureIdChanged();
                }
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, false, "Path");
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true, "Tags");
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_PostPictures_Pictures", "PostPicture")]
        public EntityCollection<PostPicture> PostPictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostPicture>("Deano.Models.FK_PostPictures_Pictures", "PostPicture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostPicture>("Deano.Models.FK_PostPictures_Pictures", "PostPicture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ReportPictures_Pictures", "ReportPicture")]
        public EntityCollection<ReportPicture> ReportPictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportPicture>("Deano.Models.FK_ReportPictures_Pictures", "ReportPicture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportPicture>("Deano.Models.FK_ReportPictures_Pictures", "ReportPicture", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Post")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Post : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Post object.
        /// </summary>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="threadId">Initial value of the ThreadId property.</param>
        /// <param name="temporaryId">Initial value of the TemporaryId property.</param>
        public static Post CreatePost(global::System.Int32 postId, global::System.String body, global::System.Int32 createdBy, global::System.DateTime createdDate, global::System.Int32 threadId, global::System.Guid temporaryId)
        {
            Post post = new Post();
            post.PostId = postId;
            post.Body = body;
            post.CreatedBy = createdBy;
            post.CreatedDate = createdDate;
            post.ThreadId = threadId;
            post.TemporaryId = temporaryId;
            return post;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                if (_PostId != value)
                {
                    OnPostIdChanging(value);
                    ReportPropertyChanging("PostId");
                    _PostId = StructuralObject.SetValidValue(value, "PostId");
                    ReportPropertyChanged("PostId");
                    OnPostIdChanged();
                }
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true, "Tags");
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThreadId
        {
            get
            {
                return _ThreadId;
            }
            set
            {
                OnThreadIdChanging(value);
                ReportPropertyChanging("ThreadId");
                _ThreadId = StructuralObject.SetValidValue(value, "ThreadId");
                ReportPropertyChanged("ThreadId");
                OnThreadIdChanged();
            }
        }
        private global::System.Int32 _ThreadId;
        partial void OnThreadIdChanging(global::System.Int32 value);
        partial void OnThreadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TemporaryId
        {
            get
            {
                return _TemporaryId;
            }
            set
            {
                OnTemporaryIdChanging(value);
                ReportPropertyChanging("TemporaryId");
                _TemporaryId = StructuralObject.SetValidValue(value, "TemporaryId");
                ReportPropertyChanged("TemporaryId");
                OnTemporaryIdChanged();
            }
        }
        private global::System.Guid _TemporaryId;
        partial void OnTemporaryIdChanging(global::System.Guid value);
        partial void OnTemporaryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_PostPictures_Posts", "PostPicture")]
        public EntityCollection<PostPicture> PostPictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PostPicture>("Deano.Models.FK_PostPictures_Posts", "PostPicture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PostPicture>("Deano.Models.FK_PostPictures_Posts", "PostPicture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Posts_Threads", "Thread")]
        public Thread Thread
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("Deano.Models.FK_Posts_Threads", "Thread").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("Deano.Models.FK_Posts_Threads", "Thread").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Thread> ThreadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Thread>("Deano.Models.FK_Posts_Threads", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Thread>("Deano.Models.FK_Posts_Threads", "Thread", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Posts_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Posts_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Posts_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Posts_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Deano.Models.FK_Posts_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Bookmarks_Posts", "Bookmark")]
        public EntityCollection<Bookmark> Bookmarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bookmark>("Deano.Models.FK_Bookmarks_Posts", "Bookmark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bookmark>("Deano.Models.FK_Bookmarks_Posts", "Bookmark", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ArticleTags_Posts", "ArticleTag")]
        public EntityCollection<ArticleTag> ArticleTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleTag>("Deano.Models.FK_ArticleTags_Posts", "ArticleTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleTag>("Deano.Models.FK_ArticleTags_Posts", "ArticleTag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="PostPicture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PostPicture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PostPicture object.
        /// </summary>
        /// <param name="postPictureId">Initial value of the PostPictureId property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        public static PostPicture CreatePostPicture(global::System.Int32 postPictureId, global::System.Int32 postId, global::System.Int32 pictureId)
        {
            PostPicture postPicture = new PostPicture();
            postPicture.PostPictureId = postPictureId;
            postPicture.PostId = postId;
            postPicture.PictureId = pictureId;
            return postPicture;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostPictureId
        {
            get
            {
                return _PostPictureId;
            }
            set
            {
                if (_PostPictureId != value)
                {
                    OnPostPictureIdChanging(value);
                    ReportPropertyChanging("PostPictureId");
                    _PostPictureId = StructuralObject.SetValidValue(value, "PostPictureId");
                    ReportPropertyChanged("PostPictureId");
                    OnPostPictureIdChanged();
                }
            }
        }
        private global::System.Int32 _PostPictureId;
        partial void OnPostPictureIdChanging(global::System.Int32 value);
        partial void OnPostPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value, "PostId");
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Int32 _PostId;
        partial void OnPostIdChanging(global::System.Int32 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                OnPictureIdChanging(value);
                ReportPropertyChanging("PictureId");
                _PictureId = StructuralObject.SetValidValue(value, "PictureId");
                ReportPropertyChanged("PictureId");
                OnPictureIdChanged();
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_PostPictures_Pictures", "Picture")]
        public Picture Picture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Deano.Models.FK_PostPictures_Pictures", "Picture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Deano.Models.FK_PostPictures_Pictures", "Picture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Picture> PictureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Deano.Models.FK_PostPictures_Pictures", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Picture>("Deano.Models.FK_PostPictures_Pictures", "Picture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_PostPictures_Posts", "Post")]
        public Post Post
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_PostPictures_Posts", "Post").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_PostPictures_Posts", "Post").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Post> PostReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Post>("Deano.Models.FK_PostPictures_Posts", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Post>("Deano.Models.FK_PostPictures_Posts", "Post", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Report object.
        /// </summary>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="temporaryId">Initial value of the TemporaryId property.</param>
        public static Report CreateReport(global::System.Int32 reportId, global::System.String subject, global::System.String body, global::System.Int32 createdBy, global::System.DateTime createdDate, global::System.Guid temporaryId)
        {
            Report report = new Report();
            report.ReportId = reportId;
            report.Subject = subject;
            report.Body = body;
            report.CreatedBy = createdBy;
            report.CreatedDate = createdDate;
            report.TemporaryId = temporaryId;
            return report;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                if (_ReportId != value)
                {
                    OnReportIdChanging(value);
                    ReportPropertyChanging("ReportId");
                    _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                    ReportPropertyChanged("ReportId");
                    OnReportIdChanged();
                }
            }
        }
        private global::System.Int32 _ReportId;
        partial void OnReportIdChanging(global::System.Int32 value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true, "Tags");
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TemporaryId
        {
            get
            {
                return _TemporaryId;
            }
            set
            {
                OnTemporaryIdChanging(value);
                ReportPropertyChanging("TemporaryId");
                _TemporaryId = StructuralObject.SetValidValue(value, "TemporaryId");
                ReportPropertyChanged("TemporaryId");
                OnTemporaryIdChanged();
            }
        }
        private global::System.Guid _TemporaryId;
        partial void OnTemporaryIdChanging(global::System.Guid value);
        partial void OnTemporaryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ReportPictures_Reports", "ReportPicture")]
        public EntityCollection<ReportPicture> ReportPictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReportPicture>("Deano.Models.FK_ReportPictures_Reports", "ReportPicture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReportPicture>("Deano.Models.FK_ReportPictures_Reports", "ReportPicture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Reports_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Reports_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Reports_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Reports_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Deano.Models.FK_Reports_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Bookmarks_Reports", "Bookmark")]
        public EntityCollection<Bookmark> Bookmarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bookmark>("Deano.Models.FK_Bookmarks_Reports", "Bookmark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bookmark>("Deano.Models.FK_Bookmarks_Reports", "Bookmark", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ArticleTags_Reports", "ArticleTag")]
        public EntityCollection<ArticleTag> ArticleTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleTag>("Deano.Models.FK_ArticleTags_Reports", "ArticleTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleTag>("Deano.Models.FK_ArticleTags_Reports", "ArticleTag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="ReportPicture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportPicture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportPicture object.
        /// </summary>
        /// <param name="reportPictureId">Initial value of the ReportPictureId property.</param>
        /// <param name="reportId">Initial value of the ReportId property.</param>
        /// <param name="pictureId">Initial value of the PictureId property.</param>
        public static ReportPicture CreateReportPicture(global::System.Int32 reportPictureId, global::System.Int32 reportId, global::System.Int32 pictureId)
        {
            ReportPicture reportPicture = new ReportPicture();
            reportPicture.ReportPictureId = reportPictureId;
            reportPicture.ReportId = reportId;
            reportPicture.PictureId = pictureId;
            return reportPicture;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportPictureId
        {
            get
            {
                return _ReportPictureId;
            }
            set
            {
                if (_ReportPictureId != value)
                {
                    OnReportPictureIdChanging(value);
                    ReportPropertyChanging("ReportPictureId");
                    _ReportPictureId = StructuralObject.SetValidValue(value, "ReportPictureId");
                    ReportPropertyChanged("ReportPictureId");
                    OnReportPictureIdChanged();
                }
            }
        }
        private global::System.Int32 _ReportPictureId;
        partial void OnReportPictureIdChanging(global::System.Int32 value);
        partial void OnReportPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportId
        {
            get
            {
                return _ReportId;
            }
            set
            {
                OnReportIdChanging(value);
                ReportPropertyChanging("ReportId");
                _ReportId = StructuralObject.SetValidValue(value, "ReportId");
                ReportPropertyChanged("ReportId");
                OnReportIdChanged();
            }
        }
        private global::System.Int32 _ReportId;
        partial void OnReportIdChanging(global::System.Int32 value);
        partial void OnReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PictureId
        {
            get
            {
                return _PictureId;
            }
            set
            {
                OnPictureIdChanging(value);
                ReportPropertyChanging("PictureId");
                _PictureId = StructuralObject.SetValidValue(value, "PictureId");
                ReportPropertyChanged("PictureId");
                OnPictureIdChanged();
            }
        }
        private global::System.Int32 _PictureId;
        partial void OnPictureIdChanging(global::System.Int32 value);
        partial void OnPictureIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ReportPictures_Pictures", "Picture")]
        public Picture Picture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Deano.Models.FK_ReportPictures_Pictures", "Picture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Deano.Models.FK_ReportPictures_Pictures", "Picture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Picture> PictureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("Deano.Models.FK_ReportPictures_Pictures", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Picture>("Deano.Models.FK_ReportPictures_Pictures", "Picture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ReportPictures_Reports", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_ReportPictures_Reports", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_ReportPictures_Reports", "Report").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("Deano.Models.FK_ReportPictures_Reports", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("Deano.Models.FK_ReportPictures_Reports", "Report", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="access">Initial value of the Access property.</param>
        public static Role CreateRole(global::System.Int32 roleId, global::System.String name, global::System.Int32 access)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.Name = name;
            role.Access = access;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Access
        {
            get
            {
                return _Access;
            }
            set
            {
                OnAccessChanging(value);
                ReportPropertyChanging("Access");
                _Access = StructuralObject.SetValidValue(value, "Access");
                ReportPropertyChanged("Access");
                OnAccessChanged();
            }
        }
        private global::System.Int32 _Access;
        partial void OnAccessChanging(global::System.Int32 value);
        partial void OnAccessChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Users_Roles", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Deano.Models.FK_Users_Roles", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Deano.Models.FK_Users_Roles", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="settingId">Initial value of the SettingId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="encrypted">Initial value of the Encrypted property.</param>
        public static Setting CreateSetting(global::System.Int32 settingId, global::System.String name, global::System.String value, global::System.Boolean encrypted)
        {
            Setting setting = new Setting();
            setting.SettingId = settingId;
            setting.Name = name;
            setting.Value = value;
            setting.Encrypted = encrypted;
            return setting;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SettingId
        {
            get
            {
                return _SettingId;
            }
            set
            {
                if (_SettingId != value)
                {
                    OnSettingIdChanging(value);
                    ReportPropertyChanging("SettingId");
                    _SettingId = StructuralObject.SetValidValue(value, "SettingId");
                    ReportPropertyChanged("SettingId");
                    OnSettingIdChanged();
                }
            }
        }
        private global::System.Int32 _SettingId;
        partial void OnSettingIdChanging(global::System.Int32 value);
        partial void OnSettingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Encrypted
        {
            get
            {
                return _Encrypted;
            }
            set
            {
                OnEncryptedChanging(value);
                ReportPropertyChanging("Encrypted");
                _Encrypted = StructuralObject.SetValidValue(value, "Encrypted");
                ReportPropertyChanged("Encrypted");
                OnEncryptedChanged();
            }
        }
        private global::System.Boolean _Encrypted;
        partial void OnEncryptedChanging(global::System.Boolean value);
        partial void OnEncryptedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="tagId">Initial value of the TagId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="tagTypeId">Initial value of the TagTypeId property.</param>
        public static Tag CreateTag(global::System.Int32 tagId, global::System.String name, global::System.Int32 tagTypeId)
        {
            Tag tag = new Tag();
            tag.TagId = tagId;
            tag.Name = name;
            tag.TagTypeId = tagTypeId;
            return tag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagId
        {
            get
            {
                return _TagId;
            }
            set
            {
                if (_TagId != value)
                {
                    OnTagIdChanging(value);
                    ReportPropertyChanging("TagId");
                    _TagId = StructuralObject.SetValidValue(value, "TagId");
                    ReportPropertyChanged("TagId");
                    OnTagIdChanged();
                }
            }
        }
        private global::System.Int32 _TagId;
        partial void OnTagIdChanging(global::System.Int32 value);
        partial void OnTagIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagTypeId
        {
            get
            {
                return _TagTypeId;
            }
            set
            {
                OnTagTypeIdChanging(value);
                ReportPropertyChanging("TagTypeId");
                _TagTypeId = StructuralObject.SetValidValue(value, "TagTypeId");
                ReportPropertyChanged("TagTypeId");
                OnTagTypeIdChanged();
            }
        }
        private global::System.Int32 _TagTypeId;
        partial void OnTagTypeIdChanging(global::System.Int32 value);
        partial void OnTagTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_ArticleTags_Tags", "ArticleTag")]
        public EntityCollection<ArticleTag> ArticleTags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArticleTag>("Deano.Models.FK_ArticleTags_Tags", "ArticleTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArticleTag>("Deano.Models.FK_ArticleTags_Tags", "ArticleTag", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="Thread")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Thread : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Thread object.
        /// </summary>
        /// <param name="threadId">Initial value of the ThreadId property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="forumId">Initial value of the ForumId property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Thread CreateThread(global::System.Int32 threadId, global::System.String subject, global::System.Int32 forumId, global::System.Int32 createdBy, global::System.DateTime createdDate)
        {
            Thread thread = new Thread();
            thread.ThreadId = threadId;
            thread.Subject = subject;
            thread.ForumId = forumId;
            thread.CreatedBy = createdBy;
            thread.CreatedDate = createdDate;
            return thread;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThreadId
        {
            get
            {
                return _ThreadId;
            }
            set
            {
                if (_ThreadId != value)
                {
                    OnThreadIdChanging(value);
                    ReportPropertyChanging("ThreadId");
                    _ThreadId = StructuralObject.SetValidValue(value, "ThreadId");
                    ReportPropertyChanged("ThreadId");
                    OnThreadIdChanged();
                }
            }
        }
        private global::System.Int32 _ThreadId;
        partial void OnThreadIdChanging(global::System.Int32 value);
        partial void OnThreadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tags
        {
            get
            {
                return _Tags;
            }
            set
            {
                OnTagsChanging(value);
                ReportPropertyChanging("Tags");
                _Tags = StructuralObject.SetValidValue(value, true, "Tags");
                ReportPropertyChanged("Tags");
                OnTagsChanged();
            }
        }
        private global::System.String _Tags;
        partial void OnTagsChanging(global::System.String value);
        partial void OnTagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ForumId
        {
            get
            {
                return _ForumId;
            }
            set
            {
                OnForumIdChanging(value);
                ReportPropertyChanging("ForumId");
                _ForumId = StructuralObject.SetValidValue(value, "ForumId");
                ReportPropertyChanged("ForumId");
                OnForumIdChanged();
            }
        }
        private global::System.Int32 _ForumId;
        partial void OnForumIdChanging(global::System.Int32 value);
        partial void OnForumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Threads_Forums", "Forum")]
        public Forum Forum
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("Deano.Models.FK_Threads_Forums", "Forum").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("Deano.Models.FK_Threads_Forums", "Forum").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Forum> ForumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Forum>("Deano.Models.FK_Threads_Forums", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Forum>("Deano.Models.FK_Threads_Forums", "Forum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Posts_Threads", "Post")]
        public EntityCollection<Post> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("Deano.Models.FK_Posts_Threads", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("Deano.Models.FK_Posts_Threads", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Threads_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Threads_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Threads_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Deano.Models.FK_Threads_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Deano.Models.FK_Threads_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Deano.Models", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="handle">Initial value of the Handle property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String username, global::System.String password, global::System.String handle, global::System.Int32 roleId, global::System.DateTime createdDate, global::System.Boolean active)
        {
            User user = new User();
            user.UserId = userId;
            user.Username = username;
            user.Password = password;
            user.Handle = handle;
            user.RoleId = roleId;
            user.CreatedDate = createdDate;
            user.Active = active;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Handle
        {
            get
            {
                return _Handle;
            }
            set
            {
                OnHandleChanging(value);
                ReportPropertyChanging("Handle");
                _Handle = StructuralObject.SetValidValue(value, false, "Handle");
                ReportPropertyChanged("Handle");
                OnHandleChanged();
            }
        }
        private global::System.String _Handle;
        partial void OnHandleChanging(global::System.String value);
        partial void OnHandleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Users_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Deano.Models.FK_Users_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Deano.Models.FK_Users_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Deano.Models.FK_Users_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("Deano.Models.FK_Users_Roles", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Forums_Users", "Forum")]
        public EntityCollection<Forum> Forums
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Forum>("Deano.Models.FK_Forums_Users", "Forum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Forum>("Deano.Models.FK_Forums_Users", "Forum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Posts_Users", "Post")]
        public EntityCollection<Post> Posts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Post>("Deano.Models.FK_Posts_Users", "Post");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Post>("Deano.Models.FK_Posts_Users", "Post", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Reports_Users", "Report")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("Deano.Models.FK_Reports_Users", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("Deano.Models.FK_Reports_Users", "Report", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Threads_Users", "Thread")]
        public EntityCollection<Thread> Threads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Thread>("Deano.Models.FK_Threads_Users", "Thread");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Thread>("Deano.Models.FK_Threads_Users", "Thread", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Deano.Models", "FK_Bookmarks_Users", "Bookmark")]
        public EntityCollection<Bookmark> Bookmarks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bookmark>("Deano.Models.FK_Bookmarks_Users", "Bookmark");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bookmark>("Deano.Models.FK_Bookmarks_Users", "Bookmark", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
