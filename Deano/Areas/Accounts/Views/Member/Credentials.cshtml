@model Deano.Models.Prototypes.Users.Credentials
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.tmpl.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/validation.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/response.js")" type="text/javascript"></script>
<script type="text/javascript">
    var responseCredentials = null;

    function onBeginCredentials(e) {
        var v = $('#frmCredentials').validate();
        responseCredentials.onBegin(e, 'responseCredentials');
    }

    function onSuccessCredentials(e) {
        if (e.Success == true) {
            unloadMemberCredentials();
       }
        else {
            var path = '@Url.Content("/Users/Header")';
            Layout.RefreshPanel(path, '#header');
            responseCredentials.onSuccess(e);
        }
   
        $('html').prop('scrollTop', 0);
    }

    $(function () {
        responseCredentials = new jsonResponse('responseCredentials');
        Validation.markRequiredFields('#frmCredentials');
        $("input").blur(function () {
            var txt = $(this).val();
            $(this).val(txt);
            $(this).valid();
        }); 
        
        $('#btnSave').click(function () {
            $('#frmCredentials').trigger('submit');
        });

        $('#Username').rules("add", { email: true,
            messages: {
                email: "Please enter a valid email address."
            }
        });
    });
 
</script>
@using (Ajax.BeginForm("Credentials", "Member", new { registryUserId = Model.UserId }, new AjaxOptions() { HttpMethod = "Post", OnBegin = "onBeginCredentials", OnSuccess = "onSuccessCredentials", OnComplete = "responseCredentials.onComplete" }, new { id = "frmCredentials" }))
{
    @Html.HiddenFor(m => m.UserId)
    <div id="responseCredentials">
    </div>
    <div class="title">
        Change Username/Password</div>
    <div class="editorLabel">
        <span class="requiredField">@Html.LabelFor(m => m.Username)</span>
    </div>
    <div class="editorField">
        @Html.TextBoxFor(m => m.Username, new { @class = "inputTableCell" })
        @Html.ValidationMessageFor(m => m.Username)
    </div>
    <div class="editorLabel">
        <span class="requiredField">@Html.LabelFor(m => m.Password)</span>
    </div>
    <div class="editorField">
        @Html.PasswordFor(m => m.Password, new { @class = "inputTableCell" })
        @Html.ValidationMessageFor(m => m.Password)
    </div>
    <div class="editorLabel">
        <span class="requiredField">@Html.LabelFor(m => m.VerifiedPassword)</span>
    </div>
    <div class="editorField">
        @Html.PasswordFor(m => m.VerifiedPassword, new { @class = "inputTableCell" })
        @Html.ValidationMessageFor(m => m.VerifiedPassword)
    </div>
    <div class="commands">
          <div style="margin-top: 10px; width: 100px" id="btnSave" class="buttonMap">
            <a style="text-decoration: underline" href="javascript:void(0)">Save</a></div>
        <div onclick="unloadMemberCredentials()" style="margin-top: 10px; width: 100px" class="buttonMap">
            <a style="text-decoration: underline" href="javascript:void(0)">Cancel</a></div>
  
    </div>      
}