@model Deano.Models.Prototypes.Users.Account
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.tmpl.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/validation.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/response.js")" type="text/javascript"></script>
<script type="text/javascript">
    var responseAccount = null;

    function onBeginAccount(e) {
        var v = $('#frmAccount').validate();
        responseAccount.onBegin(e, 'responseAccount');
    }

    function onSuccessAccount(e) {
        if (e.Success == true) {
            unloadMemberAccount();
        }
        else {
            responseAccount.onSuccess(e);
        }

        $('html').prop('scrollTop', 0);
    }

    $(function () {
        responseAccount = new jsonResponse('responseAccount');
        Validation.markRequiredFields('#frmAccount');
        $("input").blur(function () {
            var txt = $(this).val();
            $(this).val(txt);
            $(this).valid();
        });

        $('#btnSave').click(function () {
            $('#frmAccount').trigger('submit');
        });

        $('#Handle').rules("add", { minlength: 6,
            messages: {
                minlength: "Screen Name must contain at least 6 characters."
            }
        });

       
    });
 
</script>
@using (Ajax.BeginForm("Account", "Member", new { registryUserId = Model.UserId }, new AjaxOptions() { HttpMethod = "Post", OnBegin = "onBeginAccount", OnSuccess = "onSuccessAccount", OnComplete = "responseAccount.onComplete" }, new { id = "frmAccount" }))
{
    @Html.HiddenFor(m => m.UserId)
    <div id="responseAccount">
    </div>
    <div class="title">
        Change Account Information</div>
    <div class="editorLabel">
        <span class="requiredField">@Html.LabelFor(m => m.Handle)</span>
    </div>
    <div class="editorField">
        @Html.TextBoxFor(m => m.Handle, new { @class = "inputTableCell" })
        @Html.ValidationMessageFor(m => m.Handle)
    </div>
 @*   <div class="editorLabel">
        <span class="requiredField">@Html.LabelFor(m => m.Email)</span>
    </div>
    <div class="editorField">
        @Html.TextBoxFor(m => m.Email, new { @class = "inputTableCell" })
        @Html.ValidationMessageFor(m => m.Email)
    </div>*@ 
     <div class="editorLabel">
        <span class="requiredField">@Html.LabelFor(m => m.Phone)</span>
    </div>
    <div class="editorField">
        @Html.TextBoxFor(m => m.Phone, new { @class = "inputTableCell" })
        @Html.ValidationMessageFor(m => m.Phone)
    </div>
    <div class="commands">
        <div style="margin-top: 10px; width: 100px" id="btnSave" class="buttonMap">
            <a style="text-decoration: underline" href="javascript:void(0)">Save</a></div>
        <div onclick="unloadMemberAccount()" style="margin-top: 10px; width: 100px" class="buttonMap">
            <a style="text-decoration: underline" href="javascript:void(0)">Cancel</a></div>
    </div>      
}